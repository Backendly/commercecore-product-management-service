<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2f32ee1b-c3ab-4825-b0a0-6e203e00c739" name="Changes" comment="chore: Add dependency step for setting up postgres">
      <change beforePath="$PROJECT_DIR$/.github/workflows/ci.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/ci.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Ruby Module" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;nanafox&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:Backendly/commercecore-product-management-service.git&quot;,
    &quot;accountId&quot;: &quot;36e4ea78-8abc-4393-aa2d-08d03927a210&quot;
  }
}</component>
  <component name="LogFilters">
    <option name="FILTER_ERRORS" value="false" />
    <option name="FILTER_WARNINGS" value="false" />
    <option name="FILTER_INFO" value="true" />
    <option name="FILTER_DEBUG" value="true" />
    <option name="CUSTOM_FILTER" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2lguhEBlcbtuFTKtVFFcOhzGL2T" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
    <ConfirmationsSetting value="2" id="Remove" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Rake.spec: commercecore-product-management-service.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "code.cleanup.on.save": "true",
    "git-widget-placeholder": "ci/fix-test-pipeline-job",
    "javascript.nodejs.core.library.configured.version": "20.17.0",
    "javascript.nodejs.core.library.typings.version": "20.16.5",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "nodejs_interpreter_path": "/home/thelazyprogrammer/.asdf/shims/node",
    "nodejs_package_manager_path": "npm",
    "rearrange.code.on.save": "true",
    "ruby.structure.view.model.defaults.configured": "true",
    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Rake.spec: commercecore-product-management-service">
    <configuration name="commercecore-product-management-service" type="RailsRunConfigurationType" factoryName="Rails">
      <module name="commercecore-product-management-service" />
      <predefined_log_file enabled="true" id="RUBY_RAILS_SERVER" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="$MODULE_DIR$" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="false" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
      <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
      <EXTENSION ID="RubyCoverageRunConfigurationExtension" track_test_folders="true" runner="rcov" ENABLE_BRANCH_COVERAGE="true" ENABLE_FORKED_COVERAGE="true">
        <COVERAGE_PATTERN ENABLED="true">
          <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
        </COVERAGE_PATTERN>
      </EXTENSION>
      <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="SCRIPT_ARGS" VALUE="" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="PORT" VALUE="3000" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="IP" VALUE="0.0.0.0" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="DUMMY_APP" VALUE="test/dummy" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="RAILS_SERVER_TYPE" VALUE="default" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="ENVIRONMENT_TYPE" VALUE="development" />
      <RAILS_SERVER_CONFIG_SETTINGS_ID NAME="LAUNCH_JS" VALUE="false" />
      <method v="2" />
    </configuration>
    <configuration name="spec: commercecore-product-management-service" type="RakeRunConfigurationType" factoryName="Rake">
      <module name="commercecore-product-management-service" />
      <predefined_log_file enabled="true" id="RUBY_RAKE" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="$MODULE_DIR$" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
      <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
      <EXTENSION ID="RubyCoverageRunConfigurationExtension" track_test_folders="true" runner="rcov" ENABLE_BRANCH_COVERAGE="true" ENABLE_FORKED_COVERAGE="true">
        <COVERAGE_PATTERN ENABLED="true">
          <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
        </COVERAGE_PATTERN>
      </EXTENSION>
      <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_NAME" VALUE="spec" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_ARGS" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_ATTACHED_TEST_FRAMEWORKS" VALUE=":rspec " />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_TRACE" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_DRYRUN" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_PREREQS" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_TESTOPTS" VALUE="" />
      <method v="2" />
    </configuration>
    <configuration name="test: commercecore-product-management-service" type="RakeRunConfigurationType" factoryName="Rake">
      <module name="commercecore-product-management-service" />
      <predefined_log_file enabled="true" id="RUBY_RAKE" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="$MODULE_DIR$" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
      <envs>
        <env name="RAILS_ENV" value="test" />
      </envs>
      <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
      <EXTENSION ID="RubyCoverageRunConfigurationExtension" track_test_folders="true" runner="rcov" ENABLE_BRANCH_COVERAGE="true" ENABLE_FORKED_COVERAGE="true">
        <COVERAGE_PATTERN ENABLED="true">
          <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
        </COVERAGE_PATTERN>
      </EXTENSION>
      <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_NAME" VALUE="test" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_ARGS" VALUE="" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_ATTACHED_TEST_FRAMEWORKS" VALUE=":test_unit " />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_TRACE" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_DRYRUN" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_PREREQS" VALUE="false" />
      <RAKE_RUN_CONFIG_SETTINGS_ID NAME="RAKE_TASK_OPTION_TESTOPTS" VALUE="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Rails.commercecore-product-management-service" />
      <item itemvalue="Rake.spec: commercecore-product-management-service" />
      <item itemvalue="Rake.test: commercecore-product-management-service" />
    </list>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-RM-242.21829.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringUtil" SPRING_PRE_LOADER_OPTION="true" RAKE_SPRING_PRE_LOADER_OPTION="true" RAILS_SPRING_PRE_LOADER_OPTION="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2f32ee1b-c3ab-4825-b0a0-6e203e00c739" name="Changes" comment="" />
      <created>1725614160766</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1725614160766</updated>
      <workItem from="1725614162145" duration="168000" />
      <workItem from="1725614639413" duration="7000" />
      <workItem from="1725640085340" duration="6432000" />
      <workItem from="1725651984588" duration="324000" />
      <workItem from="1725652343008" duration="656000" />
      <workItem from="1725653030951" duration="777000" />
      <workItem from="1725653879423" duration="239000" />
      <workItem from="1725658239120" duration="21397000" />
      <workItem from="1725703844394" duration="9186000" />
    </task>
    <task id="LOCAL-00001" summary="feat: Add initial setup for product management microservice API&#10;&#10;This update includes the initial project files, models for Category and&#10;Products. Also it has tests for all two models.&#10;&#10;The database is setup to use PostgreSQL as planned.">
      <option name="closed" value="true" />
      <created>1725701451495</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1725701451495</updated>
    </task>
    <task id="LOCAL-00002" summary="chore: Add custom rubocop lint config file">
      <option name="closed" value="true" />
      <created>1725704088354</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1725704088355</updated>
    </task>
    <task id="LOCAL-00003" summary="chore: Add custom rubocop lint config file">
      <option name="closed" value="true" />
      <created>1725704994997</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1725704994997</updated>
    </task>
    <task id="LOCAL-00004" summary="fix: Fix bundler issues">
      <option name="closed" value="true" />
      <created>1725705031667</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1725705031667</updated>
    </task>
    <task id="LOCAL-00005" summary="fix: Update CI pipeline to handle database initialization for tests">
      <option name="closed" value="true" />
      <created>1725705112482</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1725705112482</updated>
    </task>
    <task id="LOCAL-00006" summary="fix: Fix linting issues and move unique category validation to DB-level">
      <option name="closed" value="true" />
      <created>1725708612874</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1725708612874</updated>
    </task>
    <task id="LOCAL-00007" summary="refactor: Change adapter from 'postgres' to 'postgresql' and add '-A' to rubocop">
      <option name="closed" value="true" />
      <created>1725708931436</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1725708931436</updated>
    </task>
    <task id="LOCAL-00008" summary="chore: Add dotenv-rails gem to track environment variables">
      <option name="closed" value="true" />
      <created>1725711013085</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1725711013086</updated>
    </task>
    <task id="LOCAL-00009" summary="chore: Update to use localhost, username and password fields for tests">
      <option name="closed" value="true" />
      <created>1725711185010</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1725711185010</updated>
    </task>
    <task id="LOCAL-00010" summary="chore: Add dependency step for setting up postgres">
      <option name="closed" value="true" />
      <created>1725711233503</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1725711233503</updated>
    </task>
    <option name="localTasksCounter" value="11" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="feat: Add initial setup for product management microservice API&#10;&#10;This update includes the initial project files, models for Category and&#10;Products. Also it has tests for all two models.&#10;&#10;The database is setup to use PostgreSQL as planned." />
    <MESSAGE value="chore: Add custom rubocop lint config file" />
    <MESSAGE value="fix: Fix bundler issues" />
    <MESSAGE value="fix: Update CI pipeline to handle database initialization for tests" />
    <MESSAGE value="fix: Fix linting issues and move unique category validation to DB-level" />
    <MESSAGE value="refactor: Change adapter from 'postgres' to 'postgresql' and add '-A' to rubocop" />
    <MESSAGE value="chore: Add dotenv-rails gem to track environment variables" />
    <MESSAGE value="chore: Update to use localhost, username and password fields for tests" />
    <MESSAGE value="chore: Add dependency step for setting up postgres" />
    <option name="LAST_COMMIT_MESSAGE" value="chore: Add dependency step for setting up postgres" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WfRunsListSearchHistory"><![CDATA[{
  "history": [
    {
      "branch": "main",
      "currentBranchFilter": true
    },
    {
      "branch": "main",
      "currentBranchFilter": true
    },
    {
      "branch": "main",
      "currentBranchFilter": true
    },
    {
      "branch": "ci/fix-test-pipeline-job",
      "currentBranchFilter": true
    }
  ],
  "lastFilter": {
    "branch": "ci/fix-test-pipeline-job",
    "currentBranchFilter": true
  }
}]]></component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/commercecore_product_management_service@spec__commercecore_product_management_service.rcov" NAME="spec: commercecore-product-management-service Coverage Results" MODIFIED="1725711222934" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="commercecore-product-management-service" />
  </component>
</project>